import org.apache.tools.ant.filters.ReplaceTokens

/*
Enforces compiling with the specified compiler if environment variable JAVA#_HOME is set.
For example, projects that build with Java 7 should have environment variable JAVA7_HOME set.
*/
apply from: scriptFile('env.gradle')
configureJavaCompilers(8)

ext {
    bukkit = '1.14.2-R0.1-SNAPSHOT'
    kyoripowered_text = '3.0.0'
    vault = '1.7'
    nuvotifier = '2.5.2'
    zPermissions = '1.3beta1'
    bPermissions = '2.12.1'
    vanishNoPacket = '3.20.1'
    tuxTwoLib = '1.12-b8'
    permissionsEx = '1.23.4'
    bukkitPermissions = '2.5'
    mcMMO = '1.5.10'
}

repositories {
    maven { url 'http://nexus.hc.to/content/repositories/pub_releases' }
    maven { url 'https://repo.bstats.org/content/repositories/releases' }
    maven { url 'http://repo.kitteh.org/content/groups/public' }
    maven { url 'https://hub.spigotmc.org/nexus/content/repositories/releases/' }
    maven { url 'https://hub.spigotmc.org/nexus/content/repositories/snapshots/' }
}

dependencies {
    testCompile project(':rpcapi').sourceSets.test.output
    // Project dependencies.
    compile project(path: ':common', configuration: 'shadow')
    // IntelliJ fails to resolve classes with shadow configuration from project dependencies.
    shadow project(':common')
    shadow project(':rpcapi')
    shadow project(':core')
    // Project specific dependencies.
    compile group: 'com.googlecode.json-simple', name: 'json-simple', version: '1.1.1'
    compile(group: 'net.kyori', name: 'text-api', version: kyoripowered_text) {
        exclude group: 'com.google.guava'
    }
    compile(group: 'net.kyori', name: 'text-serializer-legacy', version: kyoripowered_text)
    compile(group: 'net.kyori', name: 'text-serializer-gson', version: kyoripowered_text)
    compile(group: 'net.kyori', name: 'text-serializer-plain', version: kyoripowered_text)
    compile(group: 'org.reflections', name: 'reflections', version: reflections)
    compile(group: 'javassist', name: 'javassist', version: javassist)
    shadow(group: 'org.spigotmc', name: 'spigot-api', version: bukkit)
    shadow(group: 'net.milkbowl.vault', name: 'VaultAPI', version: vault) {
        exclude group: 'org.bukkit'
    }
    shadow(group: 'com.vexsoftware', name: 'nuvotifier-universal', version: nuvotifier)
    shadow(group: 'org.tyrannyofheaven.bukkit', name: 'zPermissions', version: zPermissions)
    shadow(group: 'de.banaco', name: 'bPermissions-Bukkit', version: bPermissions)
    shadow(group: 'org.kitteh', name: 'VanishNoPacket', version: vanishNoPacket)
    shadow(group: 'Tux2', name: 'TuxTwoLib', version: tuxTwoLib)
    shadow(group: 'ru.tehkode', name: 'PermissionsEx', version: permissionsEx)
    shadow(group: 'com.platymuus', name: 'bukkit-permissions', version: bukkitPermissions)
    shadow(group: 'com.gmail.nossr50.mcMMO', name: 'mcMMO', version: mcMMO)
    // File dependencies.
    shadow(fileTree(dir: 'lib', include: '*.jar'))
}

jar {
    archiveName = 'EnjinMinecraftPlugin.jar'
}

processResources {
    filter ReplaceTokens, tokens: [
            "version": project.property("version")
    ]
}

shadowJar {
    archiveName = 'EnjinMinecraftPlugin.jar'

    dependencies {
        include(project(':common'))
        include(dependency('.*:text'))
        include(dependency('.*:reflections'))
        include(dependency('.*:javassist'))
        include(dependency('.*:zip4j'))
        include(dependency('.*:json-smart'))
        include(dependency('net.kyori:.*'))
    }

    relocate 'org.reflections', 'com.enjin.shaded.reflections'
    relocate 'javassist', 'com.enjin.shaded.javassist'
    relocate 'net.minidev.json', 'com.enjin.shaded.json'
    relocate 'net.amoebaman', 'com.enjin.shaded.amoebaman'
    relocate 'com.google.gson', 'com.enjin.shaded.gson'
    relocate 'com.thetransactioncompany.jsonrpc2', 'com.enjin.shaded.jsonrpc2'
    relocate 'net.lingala.zip4j', 'com.enjin.shaded.zip4j'
    relocate 'net.kyori', 'com.enjin.shaded.kyori'

    mergeServiceFiles()
}